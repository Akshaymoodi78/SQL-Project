USE EMPLOYEE;
-- 3  
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT
FROM EMP_RECORD_TABLE;

-- 4
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, EMP_RATING
FROM EMP_RECORD_TABLE
WHERE EMP_RATING < 2 OR EMP_RATING > 4 OR (EMP_RATING BETWEEN 2 AND 4);

-- 5
SELECT FIRST_NAME, LAST_NAME, CONCAT(FIRST_NAME,' ',LAST_NAME) AS NAME
FROM EMP_RECORD_TABLE
WHERE DEPT = 'FINANCE';

-- 6
/* SELECT M.EMP_ID, M.FIRST_NAME, M.LAST_NAME, M.ROLE, M.EXP, COUNT(E.EMP_ID) AS "EMP_COUNT"
FROM EMP_RECORD_TABLE M
INNER JOIN EMP_RECORD_TABLE E 
ON M.EMP_ID = E.MANAGER_ID
GROUP BY M.EMP_ID
ORDER BY M.EMP_ID */

-- 7 
SELECT *
FROM EMP_RECORD_TABLE
WHERE DEPT = "FINANCE"
UNION
SELECT *
FROM EMP_RECORD_TABLE
WHERE DEPT = "HEALTHCARE"
ORDER BY DEPT;

-- 8
SELECT EMP_ID, FIRST_NAME, LAST_NAME, ROLE, DEPT, EMP_RATING,
MAX(EMP_RATING) OVER (PARTITION BY DEPT)
FROM EMP_RECORD_TABLE
ORDER BY DEPT;

-- 9
SELECT ROLE,MAX(SALARY),MIN(SALARY)
FROM EMP_RECORD_TABLE
GROUP BY ROLE;

-- 10
SELECT EMP_ID, FIRST_NAME, LAST_NAME,EXP,
DENSE_RANK() OVER(ORDER BY EXP DESC) AS RANKING
FROM EMP_RECORD_TABLE;

-- 11
CREATE VIEW V_NAME AS
SELECT *
FROM EMP_RECORD_TABLE
WHERE SALARY > 6000;

-- 12
SELECT *
FROM EMP_RECORD_TABLE
WHERE EMP_ID IN(SELECT EMP_ID
	            FROM EMP_RECORD_TABLE
	            WHERE EXP > 10
                ORDER BY EMP_ID);
                
-- 13
/* CREATE PROCEDURE `EXP` ()
BEGIN
SELECT *
FROM EMP_RECORD_TABLE
WHERE EXP >3 ;
END */

-- 14
/* CREATE DEFINER=`root`@`localhost` PROCEDURE `EXP&ROLE`()
BEGIN
SELECT EMP_ID, FIRST_NAME, LAST_NAME, EXP,
CASE
	WHEN EXP< 2 THEN "JUNIOR DATA SCIENTIST"
	WHEN EXP BETWEEN 2 AND 5 THEN "ASSOCIATE DATA SCIENTIST"
	WHEN EXP BETWEEN 5 AND 10 THEN "SENIOR DATA SCIENTIST"
	WHEN EXP BETWEEN 10 AND 12 THEN "LEAD DATA SCIENTIST"
	WHEN EXP BETWEEN 12 AND 16 THEN "MANAGER"
END AS ROLE
FROM EMP_RECORD_TABLE ORDER BY EXP;
END */

-- 15
CREATE INDEX IDX2
ON EMP_RECORD_TABLE(FIRST_NAME(20));
SHOW INDEXES FROM EMPLOYEE.EMP_RECORD_TABLE;
SELECT *
FROM EMP_RECORD_TABLE
WHERE FIRST_NAME = "ERIC";

-- 16
SELECT EMP_ID, FIRST_NAME, SALARY, (0.05*SALARY*EMP_RATING) AS INCREMENT
FROM EMP_RECORD_TABLE;

-- 17
SELECT EMP_ID, FIRST_NAME, LAST_NAME, SALARY, CONTINENT, COUNTRY,
AVG(SALARY) OVER (PARTITION BY COUNTRY) AVG_SAL_IN_COUNTRY,
AVG(SALARY) OVER (PARTITION BY CONTINENT) AVG_SAL_IN_CONTINENT,
COUNT(*) OVER (PARTITION BY COUNTRY) AVG_SAL_IN_COUNTRY,
COUNT(*) OVER (PARTITION BY COUNTRY) AVG_SAL_IN_CONTINENT
FROM EMP_RECORD_TABLE;


